<?xml version="1.0"?>
<robot>

  <gazebo>
    <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
      <robotNamespace>${namespace}/</robotNamespace>
      <updateRate>10.0</updateRate>
      <robotBaseFrame>${namespace}/base_link</robotBaseFrame>
      <wheelSeparation>0.1</wheelSeparation>
      <wheelDiameter>0.08</wheelDiameter>
      <torque>0.5</torque>
      <leftFrontJoint>front_left_wheel_hinge</leftFrontJoint>
      <rightFrontJoint>front_right_wheel_hinge</rightFrontJoint>
      <leftRearJoint>rear_left_wheel_hinge</leftRearJoint>
      <rightRearJoint>rear_right_wheel_hinge</rightRearJoint>
      <topicName>turtle1/cmd_vel</topicName>
      <commandTopic>turtle1/cmd_vel</commandTopic>
      <broadcastTF>true</broadcastTF>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>${namespace}/odom</odometryFrame>
      <covariance_x>0.000100</covariance_x>
      <covariance_y>0.000100</covariance_y>
      <covariance_yaw>0.010000</covariance_yaw>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <legacyModeNS>true</legacyModeNS>
    </plugin>
  </gazebo>

  <gazebo reference="base_link">
    <material>Gazebo/White</material>
  </gazebo>

  <gazebo reference="top">
    <material>Gazebo/Red</material>
  </gazebo>


  <gazebo reference="laser">
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="camera_link">
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="front_left_wheel">
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="front_right_wheel">
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="rear_left_wheel">
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="rear_right_wheel">
    <material>Gazebo/Black</material>
  </gazebo>

  <!-- astra -->

  <gazebo reference="camera_link">
    <sensor type="depth" name="openni_camera_camera">
      <always_on>1</always_on>
      <visualize>true</visualize>
      <camera>
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <depth_camera>

        </depth_camera>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
      </camera>
      <plugin name="kinect_controller" filename="libgazebo_ros_openni_kinect.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>10.0</updateRate>
        <cameraName>camera</cameraName>
        <frameName>camera_depth_frame</frameName>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudCutoff>0.4</pointCloudCutoff>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0.0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0.0</focalLength>
      </plugin>
    </sensor>
  </gazebo>

  <!-- If you cant't use your GPU comment RpLidar using GPU and uncomment RpLidar using CPU 
    gazebo plugin. -->

  <!-- Noise parameters based on published spec for rplidar laser
    achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
    stddev of 0.01m will put 99.7% of samples within 0.03m of the true
    reading. -->

  <!-- RpLidar A2 using GPU -->
  <gazebo reference="laser">
    <sensor type="gpu_ray" name="head_rplidar_sensor">
      <pose>0 0 0.06 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159265</min_angle>
            <max_angle>3.14159265</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.2</min>
          <max>12.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_rplidar_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>scan</topicName>
        <frameName>laser</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!-- RpLidar A3 using GPU -->
  <!-- <gazebo reference="laser">
    <sensor type="gpu_ray" name="head_rplidar_sensor">
      <pose>0 0 0.06 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159265</min_angle>
            <max_angle>3.14159265</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.2</min>
          <max>25.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_rplidar_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>scan</topicName>
        <frameName>laser</frameName>
      </plugin>
    </sensor>
  </gazebo> -->

  <!-- RpLidar A2 using CPU -->
  <!-- <gazebo reference="laser">
    <sensor type="ray" name="head_rplidar_sensor">
      <pose>0 0 0.06 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159265</min_angle>
            <max_angle>3.14159265</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.2</min>
          <max>12.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_rplidar_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>laser</frameName>
      </plugin>
    </sensor>
  </gazebo> -->

  <!-- RpLidar A3 using CPU -->
  <!-- <gazebo reference="laser">
    <sensor type="ray" name="head_rplidar_sensor">
      <pose>0 0 0.06 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159265</min_angle>
            <max_angle>3.14159265</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.2</min>
          <max>25.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_rplidar_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>laser</frameName>
      </plugin>
    </sensor>
  </gazebo> -->

  <gazebo reference="top">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>10</update_rate>
      <visualize>true</visualize>
      <topic>imu</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu</topicName>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>10.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>

  <gazebo reference="range_fl">
    <sensor type="ray" name="range_fl">
      <pose>0 0 0 0 0 0</pose>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>5</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.05</min_angle>
            <max_angle>0.05</max_angle>
          </horizontal>
          <vertical>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>-0.05</min_angle>
            <max_angle>0.05</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>0.9</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
        <gaussianNoise>0.005</gaussianNoise>
        <alwaysOn>true</alwaysOn>
        <updateRate>5</updateRate>
        <topicName>range/fl</topicName>
        <frameName>range_fl</frameName>
        <fov>0.1</fov>
        <radiation>ultrasound</radiation>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="range_fr">
    <sensor type="ray" name="range_fr">
      <pose>0 0 0 0 0 0</pose>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>5</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.05</min_angle>
            <max_angle>0.05</max_angle>
          </horizontal>
          <vertical>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>-0.05</min_angle>
            <max_angle>0.05</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>0.9</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
        <gaussianNoise>0.005</gaussianNoise>
        <alwaysOn>true</alwaysOn>
        <updateRate>5</updateRate>
        <topicName>range/fr</topicName>
        <frameName>range_fr</frameName>
        <fov>0.1</fov>
        <radiation>ultrasound</radiation>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="range_rl">
    <sensor type="ray" name="range_rl">
      <pose>0 0 0 0 0 0</pose>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>5</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.05</min_angle>
            <max_angle>0.05</max_angle>
          </horizontal>
          <vertical>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>-0.05</min_angle>
            <max_angle>0.05</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>0.9</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
        <gaussianNoise>0.005</gaussianNoise>
        <alwaysOn>true</alwaysOn>
        <updateRate>5</updateRate>
        <topicName>range/rl</topicName>
        <frameName>range_rl</frameName>
        <fov>0.1</fov>
        <radiation>ultrasound</radiation>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="range_rr">
    <sensor type="ray" name="range_rr">
      <pose>0 0 0 0 0 0</pose>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>5</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.05</min_angle>
            <max_angle>0.05</max_angle>
          </horizontal>
          <vertical>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>-0.05</min_angle>
            <max_angle>0.05</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>0.9</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
        <gaussianNoise>0.005</gaussianNoise>
        <alwaysOn>true</alwaysOn>
        <updateRate>5</updateRate>
        <topicName>range/rr</topicName>
        <frameName>range_rr</frameName>
        <fov>0.1</fov>
        <radiation>ultrasound</radiation>
      </plugin>
    </sensor>
  </gazebo>


  <!--###-->
  
  <gazebo>
    <plugin name="diff_drive" filename="libgazebo_ros_diff_drive.so">
        <!-- wheel info -->
        <left_joint>left_wheel_joint</left_joint>
        <right_joint>right_wheel_joint</right_joint>
        <wheel_separation>0.38</wheel_separation>
        <wheel_diameter>0.1</wheel_diameter>

        <!-- Limits -->
        <max_wheel_torque>200</max_wheel_torque>
        <max_wheel_acceleration>10.0</max_wheel_acceleration>

        <!-- Output -->
        <odometry_frame>odom</odometry_frame>
        <robot_base_frame>base_link</robot_base_frame>

        <publish_odom>true</publish_odom>
        <publish_odom_tf>true</publish_odom_tf>
        <publish_wheel_tf>true</publish_wheel_tf>
    </plugin>
</gazebo>


  <gazebo reference="lidar_link">
    <sensor name="laser" type="ray">
        <pose> 0 0 0 0 0 0 </pose>
        <visualize>true</visualize>
        <update_rate>10</update_rate>
        <ray>
            <scan>
                <horizontal>
                    <samples>720</samples>
                    <min_angle>-1.9</min_angle>
                    <max_angle>1.9</max_angle>
                </horizontal>
            </scan>
            <range>
                <min>0.1</min>
                <max>12</max>
            </range>
        </ray>
        <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
            <ros>
                <argument>~/out:=scan</argument>
            </ros>
            <output_type>sensor_msgs/LaserScan</output_type>
            <frame_name>lidar_link</frame_name>
        </plugin>
    </sensor>
</gazebo>


<gazebo>
    <plugin name="diff_robot_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
        <ros>
          <remapping>~/out:=joint_states</remapping>
        </ros>
        <update_rate>30</update_rate>
        <joint_name>left_wheel_joint</joint_name>
        <joint_name>right_wheel_joint</joint_name>
      </plugin>
    </gazebo>


<gazebo reference="camera_link">
    <sensor type="camera" name="camera">
        <always_on>true</always_on>
        <update_rate>15.0</update_rate>
        <camera name="camera">
            <horizontal_fov>1.46608</horizontal_fov>
            <image>
                <width>640</width>
                <height>480</height>
                <format>R8G8B8</format>
            </image>
            <distortion>
                <k1>0.0</k1>
                <k2>0.0</k2>
                <k3>0.0</k3>
                <p1>0.0</p1>
                <p2>0.0</p2>
                <center>0.5 0.5</center>
            </distortion>
        </camera>
        <plugin name="plugin_name" filename="libgazebo_ros_camera.so">
            <ros>
                <remapping>~/image_raw:=image_raw</remapping>
                <remapping>~/camera_info:=camera_info</remapping>
            </ros>
            <camera_name>camera</camera_name>
            <frame_name>camera_optical_link</frame_name>
        </plugin>
    </sensor>
</gazebo>

<gazebo reference="base_link">
    <material>Gazebo/Green</material>
</gazebo>
<gazebo reference="right_wheel">
    <material>Gazebo/Black</material>
</gazebo>
<gazebo reference="left_wheel">
    <material>Gazebo/Black</material>
</gazebo>
<gazebo reference="caster_wheel">
    <material>Gazebo/Black</material>
</gazebo>
<gazebo reference="camera_link">
    <material>Gazebo/Black</material>
</gazebo>

<!--###-->

</robot>
